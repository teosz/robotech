#include "lib/define_sensor.h"
#include "lib/debug.h"

#define LOOP_TIME 5  // [mSeconds]How long do we wait in the loop
#define LOOP_GUESS 15 // mSec ..how long run loop without waiting
#define dT ((LOOP_TIME + LOOP_GUESS) / 1000.0)  // dT [sec]
#define KC 50  // Critical value
#define PC 0.5 // Oscilation Period
#define P_GUESS 0
#define I_GUESS -2.35
#define D_GUESS -40.0
#define P ((0.6*KC) + P_GUESS )
#define I ((2*(P*(dT/PC))) + I_GUESS)
#define D (((0.125*(P*PC))/dT) + D_GUESS)

/*#include "lib/gaussinan.nxc"
int N=1000;
int a[N+1];*/

/*float getMid()
{
  int sum = 0;
  for(int i=1;i<=N;i++)
    sum += a[i];
  return sum/N
}*/
bool is_obstacol(int x)
{
  if(x < 70)
    return 1;
  return 0;
}
task main()  {

  SetSensorLowspeed(IN_2);
  int valCurrent;


  while(1)
  {



    valCurrent = SensorUS(IN_2);
      ClearScreen();
    showInt(valCurrent, LCD_LINE2);
    if(is_obstacol(valCurrent))
    {

      OnFwd(OUT_BC,-100);

    }
    else
    {
      OnFwd(OUT_C,100);
      OnFwd(OUT_B,-100);
    }


  }
}
